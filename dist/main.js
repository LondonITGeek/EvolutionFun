!function(n){var t={};function i(c){if(t[c])return t[c].exports;var g=t[c]={i:c,l:!1,exports:{}};return n[c].call(g.exports,g,g.exports,i),g.l=!0,g.exports}i.m=n,i.c=t,i.d=function(n,t,c){i.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:c})},i.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(n,t){if(1&t&&(n=i(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var c=Object.create(null);if(i.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var g in n)i.d(c,g,function(t){return n[t]}.bind(null,g));return c},i.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return i.d(t,"a",t),t},i.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},i.p="",i(i.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/creature.js\nclass Creature {\r\n  constructor(startingX, startingY, dimenstion, speed, drawInfo) {\r\n    this.speed = speed;\r\n    this.drawInfo = drawInfo;\r\n    this.dimensions = {\r\n      width: dimenstion,\r\n      height: dimenstion,\r\n    };\r\n\r\n    this.position = {\r\n      x: startingX,\r\n      y: startingY,\r\n    };\r\n  }\r\n\r\n  drawerLable(ctx) {\r\n    ctx.fillText(`${this.position.x}:${this.position.y}`, this.position.x - 10, this.position.y - 10);\r\n  }\r\n\r\n  drawer(ctx) {\r\n    ctx.fillStyle = "red";\r\n    ctx.beginPath();\r\n    ctx.ellipse(\r\n      this.position.x + this.dimensions.width / 2,\r\n      this.position.y + this.dimensions.height / 2,\r\n      this.dimensions.width / 2,\r\n      this.dimensions.height / 2,\r\n      0,\r\n      0,\r\n      2 * Math.PI\r\n    );\r\n    ctx.fill();\r\n    ctx.closePath();\r\n    if (this.drawInfo) {\r\n      this.drawerLable(ctx);\r\n    }\r\n  }\r\n\r\n  update() {\r\n    const currentPosition = {\r\n      ...this.position,\r\n    };\r\n\r\n    switch (Math.floor(Math.random() * 4) + 1) {\r\n      case 1: // right\r\n        this.position.x += this.speed * this.dimensions.width;\r\n        break;\r\n      case 2: // left\r\n        this.position.x -= this.speed * this.dimensions.width;\r\n        break;\r\n      case 3: // up\r\n        this.position.y -= this.speed * this.dimensions.width;\r\n        break;\r\n      case 4: // down\r\n        this.position.y += this.speed * this.dimensions.width;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (\r\n      this.position.x <= 0 ||\r\n      this.position.x + this.dimensions.width >= this.gameWidth ||\r\n      this.position.y <= 0 ||\r\n      this.position.y + this.dimensions.height >= this.gameHeight\r\n    ) {\r\n      console.log("onnexting collide");\r\n      this.position = currentPosition;\r\n    }\r\n  }\r\n\r\n  updateAndRedrawer(ctx) {\r\n    this.update();\r\n    this.drawer(ctx);\r\n  }\r\n}\r\n\n// CONCATENATED MODULE: ./src/game.js\nclass Game {\r\n  constructor(GAME_HEIGHT, GAME_WIDTH, DIVISION_SIZE, SHOW_GRAPH) {\r\n    this.height = GAME_HEIGHT;\r\n    this.width = GAME_WIDTH;\r\n    this.divisionSize = DIVISION_SIZE;\r\n    this.showGraph = SHOW_GRAPH;\r\n    this.gameComponents = [];\r\n\r\n    this.canvas = document.createElement("canvas");\r\n    this.canvas.setAttribute("id", "canvas");\r\n    this.canvas.setAttribute("width", GAME_WIDTH * DIVISION_SIZE);\r\n    this.canvas.setAttribute("height", GAME_HEIGHT * DIVISION_SIZE);\r\n    this.canvas.setAttribute("style", "border: 1px solid black; box-sizing: border-box");\r\n    document.body.appendChild(this.canvas);\r\n    this.ctx = canvas.getContext("2d");\r\n  }\r\n\r\n  addGameComponents(gameComponent) {\r\n    this.gameComponents.push(gameComponent);\r\n  }\r\n\r\n  drawGrid() {\r\n    this.ctx.lineWidth = 0.5;\r\n    // Do columns\r\n    for (let index = this.divisionSize; index < this.width * this.divisionSize; index += this.divisionSize) {\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(index, 0);\r\n      this.ctx.lineTo(index, this.height * this.divisionSize);\r\n      this.ctx.stroke();\r\n      this.ctx.closePath();\r\n    }\r\n\r\n    // Do Rows\r\n    for (let index = this.divisionSize; index < this.height * this.divisionSize; index += this.divisionSize) {\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(0, index);\r\n      this.ctx.lineTo(this.width * this.divisionSize, index);\r\n      this.ctx.stroke();\r\n      this.ctx.closePath();\r\n    }\r\n  }\r\n\r\n  update(deltaTime) {\r\n    this.ctx.fillStyle = "white";\r\n    this.ctx.fillRect(this.canvas.clientTop, this.canvas.clientLeft, this.width * this.divisionSize, this.height * this.divisionSize);\r\n    this.gameComponents.forEach((component) => {\r\n      component.updateAndRedrawer(this.ctx, deltaTime);\r\n    });\r\n\r\n    if (this.showGraph) {\r\n      this.drawGrid();\r\n    }\r\n  }\r\n}\r\n\n// CONCATENATED MODULE: ./src/index.js\n\r\n\r\n\r\nfunction randomNumberBetween(min, max) {\r\n  return Math.floor(Math.random() * (max - min) + 1);\r\n}\r\n\r\nfunction roundToNearestFive(numberToRound) {\r\n  return Math.ceil(numberToRound / 5) * 5;\r\n}\r\n\r\nfunction initialiseGame() {\r\n  const game = new Game(128, 128, 5, false);\r\n  for (let index = 0; index < 10; index++) {\r\n    // 0,0 to 635,635\r\n    const creature = new Creature(\r\n      roundToNearestFive(randomNumberBetween(0, 635)),\r\n      roundToNearestFive(randomNumberBetween(0, 635)),\r\n      game.divisionSize,\r\n      1,\r\n      true\r\n    );\r\n    game.addGameComponents(creature);\r\n  }\r\n\r\n  return game;\r\n}\r\n\r\nlet src_game = initialiseGame();\r\nlet framesPerSecond = 20;\r\n\r\nfunction animate() {\r\n  src_game.update();\r\n  setTimeout(() => requestAnimationFrame(animate), 1000 / framesPerSecond);\r\n}\r\n\r\nanimate();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);